// ----@@----@@@@-------@@@@----------
// ---@@@---@@@@@@-----@@@@@@---------
// ---@-@---@@--@@-----@@--@@---------
// --@@-@-------@@----@@----@@--------
// -@@--@------@@-----@@----@@--------
// @@@@@@@@--@@@------@@----@@--@@@@--
// @@@@@@@@-@@@-------@@----@@--@@@@--
// -----@---@@---------@@--@@---------
// -----@---@@@@@@-@@--@@@@@@---------
// -----@---@@@@@@-@@---@@@@----------
// -----------------------------------
extern const uint8_t free_comicbd10x11[] PROGMEM;
const uint8_t free_comicbd10x11[] PROGMEM =
{
//  type|width|height|first char
    0x02, 0x0A, 0x0B, 0x00,
// GROUP first '-' total 13 chars
//  unicode(LSB,MSB)|count
    0x00, 0x2D, 0x0D, // unicode record
    0x00, 0x00, 0x06, 0x07, // char '-' (0x002D/45)
    0x00, 0x06, 0x02, 0x0A, // char '.' (0x002E/46)
    0x00, 0x0A, 0x06, 0x0B, // char '/' (0x002F/47)
    0x00, 0x16, 0x08, 0x0A, // char '0' (0x0030/48)
    0x00, 0x26, 0x05, 0x0A, // char '1' (0x0031/49)
    0x00, 0x30, 0x06, 0x0A, // char '2' (0x0032/50)
    0x00, 0x3C, 0x06, 0x0A, // char '3' (0x0033/51)
    0x00, 0x48, 0x08, 0x0A, // char '4' (0x0034/52)
    0x00, 0x58, 0x07, 0x0A, // char '5' (0x0035/53)
    0x00, 0x66, 0x06, 0x0A, // char '6' (0x0036/54)
    0x00, 0x72, 0x08, 0x0A, // char '7' (0x0037/55)
    0x00, 0x82, 0x07, 0x0A, // char '8' (0x0038/56)
    0x00, 0x90, 0x07, 0x0A, // char '9' (0x0039/57)
    0x00, 0x9E,
    0x00, 0x60, 0x60, 0x60, 0x60, 0x00, // char '-' (0x002D/45)
    0x00, 0x00, 0x03, 0x03, // char '.' (0x002E/46)
    0x00, 0x80, 0xC0, 0x70, 0x1E, 0x07, 0x04, 0x07, 0x01, 0x00, 0x00, 0x00, // char '/' (0x002F/47)
    0x78, 0xFE, 0x87, 0x03, 0x03, 0x87, 0xFE, 0x78, 0x00, 0x01, 0x03, 0x03, 0x03, 0x03, 0x01, 0x00, // char '0' (0x0030/48)
    0x00, 0x06, 0xFF, 0xFF, 0x00, 0x00, 0x03, 0x03, 0x03, 0x03, // char '1' (0x0031/49)
    0xC6, 0xE7, 0x63, 0x33, 0x1F, 0x0E, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, // char '2' (0x0032/50)
    0x86, 0x37, 0x33, 0x33, 0xFF, 0xEE, 0x01, 0x03, 0x03, 0x03, 0x03, 0x01, // char '3' (0x0033/51)
    0x60, 0x70, 0x78, 0x6E, 0x63, 0xFF, 0x60, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, // char '4' (0x0034/52)
    0x9F, 0x1F, 0x1B, 0x1B, 0x9B, 0xF3, 0x60, 0x01, 0x03, 0x03, 0x03, 0x03, 0x01, 0x00, // char '5' (0x0035/53)
    0xF8, 0xBC, 0x36, 0x33, 0xB0, 0xE0, 0x01, 0x03, 0x03, 0x03, 0x03, 0x01, // char '6' (0x0036/54)
    0x03, 0x03, 0x83, 0xF3, 0x3B, 0x0F, 0x07, 0x03, 0x00, 0x00, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, // char '7' (0x0037/55)
    0x00, 0xFE, 0x7F, 0x33, 0x33, 0xFF, 0xEE, 0x00, 0x01, 0x03, 0x03, 0x03, 0x03, 0x01, // char '8' (0x0038/56)
    0x1C, 0x3E, 0x63, 0x63, 0xE3, 0xF7, 0x7E, 0x00, 0x03, 0x03, 0x01, 0x01, 0x00, 0x00, // char '9' (0x0039/57)
    0x00, 0x00, 0x00, // end of unicode tables
    // FONT REQUIRES 222 BYTES
};


// --------@@@--------@@@@@--------------@@@@@---------------
// -------@@@@@-----@@@@@@@@@----------@@@@@@@@@-------------
// -------@@@@@----@@@@@@@@@@@--------@@@@@@@@@@@------------
// ------@@@@@@---@@@@@---@@@@--------@@@@---@@@@------------
// -----@@@@@@@----@@------@@@-------@@@@-----@@@@-----------
// ----@@@@-@@@------------@@@-------@@@-------@@@-----------
// ----@@@@-@@@-----------@@@@-------@@@-------@@@-----------
// ---@@@@--@@@----------@@@@-------@@@@-------@@@-----------
// --@@@@---@@@--------@@@@@@-------@@@--------@@@-----------
// -@@@@----@@@-------@@@@@@--------@@@--------@@@-----------
// @@@@@@@@@@@@@@----@@@@@----------@@@--------@@@-----------
// @@@@@@@@@@@@@@---@@@@------------@@@@-------@@@-@@@@@@@@@-
// -@@@@@@@@@@@@@--@@@@--------------@@@-------@@@-@@@@@@@@@-
// ---------@@@----@@@---------------@@@------@@@@-----------
// ---------@@@---@@@@---------------@@@------@@@------------
// ---------@@@---@@@@@@@@@@@--------@@@@----@@@@------------
// ---------@@@----@@@@@@@@@@@--@@@---@@@@@@@@@@-------------
// ---------@@@----@@@@@@@@@@@-@@@@----@@@@@@@@@-------------
// ----------@------------------@@@-----@@@@@@---------------
extern const uint8_t free_comicbd18x19[] PROGMEM;
const uint8_t free_comicbd18x19[] PROGMEM =
{
//  type|width|height|first char
    0x02, 0x12, 0x13, 0x00,
// GROUP first '-' total 13 chars
//  unicode(LSB,MSB)|count
    0x00, 0x2D, 0x0D, // unicode record
    0x00, 0x00, 0x09, 0x0D, // char '-' (0x002D/45)
    0x00, 0x12, 0x04, 0x13, // char '.' (0x002E/46)
    0x00, 0x1E, 0x0B, 0x13, // char '/' (0x002F/47)
    0x00, 0x3F, 0x0E, 0x13, // char '0' (0x0030/48)
    0x00, 0x69, 0x08, 0x12, // char '1' (0x0031/49)
    0x00, 0x81, 0x0C, 0x12, // char '2' (0x0032/50)
    0x00, 0xA5, 0x0C, 0x13, // char '3' (0x0033/51)
    0x00, 0xC9, 0x0E, 0x13, // char '4' (0x0034/52)
    0x00, 0xF3, 0x0D, 0x13, // char '5' (0x0035/53)
    0x01, 0x1A, 0x0D, 0x13, // char '6' (0x0036/54)
    0x01, 0x41, 0x0F, 0x12, // char '7' (0x0037/55)
    0x01, 0x6E, 0x0D, 0x13, // char '8' (0x0038/56)
    0x01, 0x95, 0x0D, 0x12, // char '9' (0x0039/57)
    0x01, 0xBC,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, // char '-' (0x002D/45)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x07, 0x07, 0x07, // char '.' (0x002E/46)
    0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xF0, 0xFC, 0x7F, 0x1F, 0x02, 0x80, 0xE0, 0xF0, 0xFC, 0x3F, 0x0F, 0x07, 0x01, 0x00, 0x00, 0x00, 0x07, 0x07, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // char '/' (0x002F/47)
    0x80, 0xF0, 0xFC, 0xFE, 0x1E, 0x0F, 0x07, 0x07, 0x07, 0x0F, 0x1E, 0xFE, 0xFC, 0xF0, 0x0F, 0xFF, 0xFF, 0xF8, 0x80, 0x00, 0x00, 0x00, 0x00, 0x80, 0xE0, 0xFF, 0xFF, 0x3F, 0x00, 0x00, 0x01, 0x03, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x03, 0x03, 0x00, 0x00, // char '0' (0x0030/48)
    0x38, 0x3C, 0x1E, 0xFE, 0xFF, 0xFF, 0x00, 0x00, 0x80, 0x80, 0x80, 0xFF, 0xFF, 0xFF, 0x80, 0x80, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, // char '1' (0x0031/49)
    0x08, 0x1C, 0x1E, 0x0E, 0x0F, 0x07, 0x07, 0x87, 0xCF, 0xFE, 0xFE, 0x7C, 0xC0, 0xF0, 0xF8, 0xFC, 0x9E, 0x8F, 0x87, 0x87, 0x83, 0x83, 0x81, 0x00, 0x00, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, // char '2' (0x0032/50)
    0x00, 0x0C, 0x0E, 0x0E, 0x87, 0x87, 0x87, 0xC7, 0xEF, 0xFE, 0xFC, 0x78, 0x80, 0xC0, 0xC0, 0x81, 0x03, 0x03, 0x03, 0x07, 0x8F, 0xFF, 0xFE, 0xFC, 0x00, 0x03, 0x03, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x03, 0x01, 0x00, // char '3' (0x0033/51)
    0x00, 0x00, 0x00, 0x80, 0xE0, 0xF0, 0xF8, 0x7E, 0x1F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x0C, 0x1E, 0x1F, 0x1F, 0x1F, 0x1D, 0x1C, 0x1C, 0x1C, 0xFF, 0xFF, 0xFF, 0x1C, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x07, 0x03, 0x00, 0x00, // char '4' (0x0034/52)
    0xC2, 0xFF, 0xFF, 0xFF, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7, 0xC7, 0x87, 0x00, 0xC3, 0xC7, 0xC7, 0x83, 0x01, 0x00, 0x00, 0x00, 0x80, 0xE3, 0xFF, 0xFF, 0x3E, 0x01, 0x03, 0x03, 0x07, 0x07, 0x07, 0x07, 0x07, 0x03, 0x03, 0x01, 0x00, 0x00, // char '5' (0x0035/53)
    0x00, 0xC0, 0xF0, 0xF8, 0xFC, 0xDE, 0xCF, 0xC7, 0xC3, 0x80, 0x80, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xE3, 0x81, 0x01, 0x01, 0x01, 0x83, 0xFF, 0xFF, 0xFF, 0x3C, 0x00, 0x01, 0x03, 0x03, 0x07, 0x07, 0x07, 0x07, 0x07, 0x03, 0x01, 0x00, 0x00, // char '6' (0x0036/54)
    0x02, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0xC7, 0xF7, 0xFF, 0x7F, 0x3F, 0x0F, 0x07, 0x02, 0x00, 0x00, 0x00, 0xC0, 0xF0, 0xFC, 0xFF, 0x1F, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // char '7' (0x0037/55)
    0x00, 0xFC, 0xFE, 0xFE, 0xCF, 0x87, 0x87, 0xC7, 0xFF, 0xFE, 0xFE, 0x78, 0x00, 0xF8, 0xFE, 0xFF, 0x8F, 0x07, 0x03, 0x03, 0x07, 0x87, 0xFF, 0xFE, 0xFC, 0x70, 0x00, 0x03, 0x03, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x03, 0x03, 0x01, 0x00, // char '8' (0x0038/56)
    0xF8, 0xFC, 0xFE, 0x0E, 0x07, 0x07, 0x07, 0x07, 0x0F, 0xBE, 0xFE, 0xFC, 0xF0, 0x01, 0x87, 0x87, 0x8F, 0xCE, 0xCE, 0xEE, 0xEE, 0x7F, 0x7F, 0x1F, 0x0F, 0x01, 0x00, 0x03, 0x03, 0x03, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // char '9' (0x0039/57)
    0x00, 0x00, 0x00, // end of unicode tables
    // FONT REQUIRES 508 BYTES
};



// -------------@@@------------@@@@@@---------------------@@@@@@-----------------------
// -----------@@@@@@---------@@@@@@@@@@-----------------@@@@@@@@@@---------------------
// -----------@@@@@@--------@@@@@@@@@@@@@--------------@@@@@@@@@@@@--------------------
// ----------@@@@@@@-------@@@@@@@@@@@@@@-------------@@@@@@@@@@@@@@-------------------
// ---------@@@@@@@@------@@@@@@@@@@@@@@@@-----------@@@@@@@@@@@@@@@@------------------
// --------@@@@@@@@@-----@@@@@@@----@@@@@@----------@@@@@@@----@@@@@@------------------
// --------@@@@@@@@@-----@@@@@-------@@@@@----------@@@@@-------@@@@@@-----------------
// -------@@@@@@@@@@------@@@--------@@@@@---------@@@@@@--------@@@@@-----------------
// ------@@@@@@@@@@@-----------------@@@@@---------@@@@@---------@@@@@-----------------
// ------@@@@@-@@@@@----------------@@@@@@---------@@@@@----------@@@@@----------------
// -----@@@@@--@@@@@----------------@@@@@----------@@@@-----------@@@@@----------------
// ----@@@@@@--@@@@@--------------@@@@@@@---------@@@@@-----------@@@@@----------------
// ----@@@@@---@@@@@-------------@@@@@@@----------@@@@@-----------@@@@@----------------
// ---@@@@@----@@@@@-----------@@@@@@@@-----------@@@@@-----------@@@@@----------------
// --@@@@@@----@@@@@----------@@@@@@@@------------@@@@@-----------@@@@@----------------
// -@@@@@@@@@@@@@@@@@@@------@@@@@@@--------------@@@@@-----------@@@@@----------------
// @@@@@@@@@@@@@@@@@@@@@---@@@@@@@@---------------@@@@@-----------@@@@@----------------
// @@@@@@@@@@@@@@@@@@@@@---@@@@@@------------------@@@@-----------@@@@--@@@@@@@@@@@@@--
// @@@@@@@@@@@@@@@@@@@@@--@@@@@@-------------------@@@@@---------@@@@@--@@@@@@@@@@@@@@-
// --@@@@@@@@@@@@@@@@@@---@@@@@--------------------@@@@@---------@@@@@--@@@@@@@@@@@@@--
// ------------@@@@@-----@@@@@---------------------@@@@@---------@@@@@-----------------
// ------------@@@@@-----@@@@@----------------------@@@@@-------@@@@@@-----------------
// ------------@@@@@-----@@@@@@@@@@@@@@@------------@@@@@@-----@@@@@@------------------
// ------------@@@@@-----@@@@@@@@@@@@@@@@@----------@@@@@@@@@@@@@@@@@------------------
// ------------@@@@@-----@@@@@@@@@@@@@@@@@-----------@@@@@@@@@@@@@@@-------------------
// -------------@@@@-----@@@@@@@@@@@@@@@@@---@@@------@@@@@@@@@@@@@--------------------
// -------------@@@-------@@@@@@@@@@@@@@@@--@@@@@------@@@@@@@@@@@---------------------
// -----------------------------------------@@@@@--------@@@@@@@-----------------------
// ------------------------------------------@@@---------------------------------------
extern const uint8_t free_comicbd26x29[] PROGMEM;
const uint8_t free_comicbd26x29[] PROGMEM =
{
//  type|width|height|first char
    0x02, 0x1A, 0x1D, 0x00,
// GROUP first '-' total 13 chars
//  unicode(LSB,MSB)|count
    0x00, 0x2D, 0x0D, // unicode record
    0x00, 0x00, 0x0E, 0x14, // char '-' (0x002D/45)
    0x00, 0x2A, 0x05, 0x1D, // char '.' (0x002E/46)
    0x00, 0x3E, 0x10, 0x1D, // char '/' (0x002F/47)
    0x00, 0x7E, 0x15, 0x1C, // char '0' (0x0030/48)
    0x00, 0xD2, 0x0C, 0x1B, // char '1' (0x0031/49)
    0x01, 0x02, 0x12, 0x1B, // char '2' (0x0032/50)
    0x01, 0x4A, 0x11, 0x1C, // char '3' (0x0033/51)
    0x01, 0x8E, 0x15, 0x1B, // char '4' (0x0034/52)
    0x01, 0xE2, 0x13, 0x1C, // char '5' (0x0035/53)
    0x02, 0x2E, 0x12, 0x1C, // char '6' (0x0036/54)
    0x02, 0x76, 0x14, 0x1C, // char '7' (0x0037/55)
    0x02, 0xC6, 0x13, 0x1C, // char '8' (0x0038/56)
    0x03, 0x12, 0x13, 0x1C, // char '9' (0x0039/57)
    0x03, 0x5E,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x04, // char '-' (0x002D/45)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x1E, 0x1E, 0x1E, 0x0C, // char '.' (0x002E/46)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xE0, 0xF8, 0xFE, 0xFF, 0x7F, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xE0, 0xF8, 0xFE, 0xFF, 0x7F, 0x1F, 0x07, 0x01, 0x00, 0x00, 0x00, 0x80, 0xE0, 0xF8, 0xFE, 0xFF, 0x3F, 0x1F, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x1F, 0x1F, 0x0F, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // char '/' (0x002F/47)
    0x00, 0x80, 0xE0, 0xF0, 0xF8, 0xFC, 0xFE, 0x3E, 0x3F, 0x1F, 0x1F, 0x1F, 0x1F, 0x3F, 0x7E, 0xFE, 0xFC, 0xF8, 0xF0, 0xC0, 0x00, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x01, 0x1F, 0xFF, 0xFF, 0xFF, 0xFC, 0xE0, 0xC0, 0x80, 0x80, 0x80, 0x80, 0x80, 0xC0, 0xE0, 0xFC, 0xFF, 0xFF, 0xFF, 0x3F, 0x01, 0x00, 0x00, 0x00, 0x01, 0x03, 0x07, 0x07, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x07, 0x07, 0x03, 0x01, 0x00, 0x00, 0x00, // char '0' (0x0030/48)
    0x60, 0xF0, 0xF8, 0xFC, 0xFE, 0xFE, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xC0, 0xC0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0xC0, 0x80, 0x03, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x03, // char '1' (0x0031/49)
    0x60, 0xF0, 0xF8, 0xFC, 0x7E, 0x3E, 0x3F, 0x1F, 0x1F, 0x1F, 0x1F, 0x3F, 0xFE, 0xFE, 0xFC, 0xFC, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xE0, 0xE0, 0xF0, 0xF8, 0xF8, 0x7E, 0x7F, 0x3F, 0x1F, 0x0F, 0x03, 0x00, 0xF0, 0xFC, 0xFF, 0xFF, 0xFF, 0xCF, 0xC7, 0xC3, 0xC1, 0xC1, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0x80, 0x80, 0x00, 0x03, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x00, // char '2' (0x0032/50)
    0x00, 0x38, 0x7C, 0x7E, 0x3E, 0x3E, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x3E, 0xFE, 0xFE, 0xFC, 0xF8, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x38, 0x7C, 0x7C, 0x7C, 0x7C, 0xFE, 0xFE, 0xFF, 0xFF, 0xFF, 0xEF, 0xC7, 0x01, 0xE0, 0xF0, 0xF0, 0xF0, 0xE0, 0xC0, 0x80, 0x80, 0x80, 0x80, 0xC0, 0xC1, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x03, 0x03, 0x07, 0x07, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x07, 0x07, 0x03, 0x03, 0x00, 0x00, // char '3' (0x0033/51)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xE0, 0xF0, 0xF8, 0xFE, 0xFE, 0xFF, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xE0, 0xF8, 0xFC, 0xFF, 0xFF, 0x9F, 0x8F, 0x83, 0x81, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x80, 0x80, 0x00, 0x07, 0x07, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0x0F, 0x0F, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x07, 0x07, 0x07, 0x03, 0x00, 0x00, 0x00, 0x00, // char '4' (0x0034/52)
    0x00, 0xEE, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x0F, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFF, 0x7F, 0x3E, 0x3E, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x3F, 0xFE, 0xFE, 0xFC, 0xF8, 0xE0, 0x40, 0xF0, 0xF0, 0xF0, 0xE0, 0xC0, 0x80, 0x80, 0x80, 0x80, 0x80, 0xC0, 0xC0, 0xE0, 0xF8, 0xFF, 0xFF, 0xFF, 0x3F, 0x00, 0x01, 0x03, 0x07, 0x07, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x07, 0x07, 0x07, 0x03, 0x01, 0x00, 0x00, // char '5' (0x0035/53)
    0x00, 0x00, 0x80, 0xC0, 0xE0, 0xF0, 0xF8, 0xFC, 0x7E, 0x3F, 0x1F, 0x0F, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x7C, 0x7C, 0x7C, 0x7C, 0xFC, 0xFC, 0xF8, 0xF8, 0xF0, 0xE0, 0x80, 0x7F, 0xFF, 0xFF, 0xFF, 0xF0, 0xC0, 0x80, 0x80, 0x80, 0x80, 0x80, 0xC0, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x00, 0x01, 0x03, 0x07, 0x07, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x07, 0x07, 0x03, 0x01, 0x00, 0x00, // char '6' (0x0036/54)
    0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x9F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x1F, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xF0, 0xFC, 0xFF, 0xFF, 0x7F, 0x1F, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xF8, 0xFE, 0xFF, 0xFF, 0x3F, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x0F, 0x0F, 0x0F, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // char '7' (0x0037/55)
    0x00, 0xC0, 0xF0, 0xFC, 0xFC, 0xFE, 0x3E, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x3F, 0xFE, 0xFE, 0xFC, 0xF8, 0xC0, 0x00, 0x00, 0x83, 0xCF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFC, 0x7C, 0x7C, 0x7C, 0xFE, 0xFE, 0xFF, 0xFF, 0xEF, 0xE7, 0x81, 0x00, 0x3C, 0xFF, 0xFF, 0xFF, 0xFF, 0xE3, 0xC1, 0x80, 0x80, 0x80, 0x80, 0x80, 0xC0, 0xE1, 0xFF, 0xFF, 0xFF, 0xFF, 0x7E, 0x00, 0x01, 0x03, 0x03, 0x07, 0x07, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x07, 0x07, 0x03, 0x03, 0x01, 0x00, // char '8' (0x0038/56)
    0xC0, 0xF0, 0xF8, 0xFC, 0xFE, 0x3E, 0x3F, 0x1F, 0x1F, 0x1F, 0x1F, 0x3F, 0x3F, 0x7E, 0xFE, 0xFC, 0xF8, 0xF0, 0xC0, 0x1F, 0x7F, 0xFF, 0xFF, 0xFF, 0xF0, 0xF0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xF0, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x01, 0x81, 0x83, 0xC3, 0xC3, 0xE3, 0xF3, 0xFB, 0xFF, 0xFF, 0x7F, 0x1F, 0x0F, 0x03, 0x00, 0x00, 0x00, 0x0F, 0x0F, 0x0F, 0x0F, 0x07, 0x07, 0x03, 0x03, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // char '9' (0x0039/57)
    0x00, 0x00, 0x00, // end of unicode tables
    // FONT REQUIRES 926 BYTES
};

// -----------@@@@------@@@@@------------------@@@@@----------------------
// ----------@@@@@----@@@@@@@@@--------------@@@@@@@@@--------------------
// ----------@@@@@---@@@@@@@@@@@------------@@@@@@@@@@@-------------------
// ----------@@@@@--@@@@@@@@@@@@@----------@@@@@@@@@@@@@------------------
// ---------@@@@@@--@@@@@---@@@@@----------@@@@@---@@@@@@-----------------
// ---------@@@@@@-@@@@@------@@@@--------@@@@-----@@@@@@-----------------
// --------@@@@@@@-@@@@-------@@@@--------@@@@-----@@@@@@-----------------
// --------@@@@@@@-@@@@-------@@@@--------@@@@----@@@@@@@-----------------
// -------@@@@@@@@------------@@@@--------@@@@----@@@@@@@-----------------
// -------@@@@@@@@------------@@@@--------@@@@----@@@@@@@-----------------
// -------@@@-@@@@-----------@@@@---------@@@@---@@@@@@@@-----------------
// ------@@@@-@@@@-----------@@@@---------@@@@---@@@@@@@@-----------------
// ------@@@@-@@@@----------@@@@----------@@@@--@@@@@@@@@-----------------
// -----@@@@--@@@@---------@@@@-----------@@@@--@@@@-@@@@-----------------
// -----@@@@--@@@@---------@@@@-----------@@@@--@@@@-@@@@-----------------
// -----@@@---@@@@--------@@@@------------@@@@-@@@@@-@@@@-----------------
// ----@@@@---@@@@-------@@@@@------------@@@@-@@@@--@@@@-----------------
// ----@@@@---@@@@-------@@@@-------------@@@@-@@@@--@@@@-@@@@@@@@@@@@@@@-
// ---@@@@----@@@@------@@@@--------------@@@@@@@@---@@@@-@@@@@@@@@@@@@@@-
// ---@@@@----@@@@-----@@@@@--------------@@@@@@@@---@@@@-@@@@@@@@@@@@@@@-
// --@@@@-----@@@@-----@@@@---------------@@@@@@@@---@@@@-@@@@@@@@@@@@@@@-
// --@@@@-----@@@@----@@@@----------------@@@@@@@----@@@@-----------------
// --@@@@@@@@@@@@@---@@@@@----------------@@@@@@@----@@@@-----------------
// -@@@@@@@@@@@@@@---@@@@-----------------@@@@@@@----@@@@-----------------
// -@@@@@@@@@@@@@@--@@@@------------@@@---@@@@@@-----@@@@-----------------
// @@@@@@@@@@@@@@@--@@@@-----------@@@@@---@@@@@----@@@@@-----------------
// -----------@@@@-@@@@@@@@@@@@@@@-@@@@@---@@@@@@@@@@@@@------------------
// -----------@@@@-@@@@@@@@@@@@@@@-@@@@@----@@@@@@@@@@@-------------------
// -----------@@@@-@@@@@@@@@@@@@@@-@@@@@-----@@@@@@@@@--------------------
// -----------@@@@-@@@@@@@@@@@@@@@--@@@--------@@@@@----------------------
extern const uint8_t free_Targa16x30[] PROGMEM;
const uint8_t free_Targa16x30[] PROGMEM =
{
//  type|width|height|first char
    0x02, 0x10, 0x1E, 0x00,
// GROUP first '-' total 13 chars
//  unicode(LSB,MSB)|count
    0x00, 0x2D, 0x0D, // unicode record
    0x00, 0x00, 0x0F, 0x15, // char '-' (0x002D/45)
    0x00, 0x2D, 0x06, 0x1E, // char '.' (0x002E/46)
    0x00, 0x45, 0x0F, 0x1E, // char '/' (0x002F/47)
    0x00, 0x81, 0x0F, 0x1E, // char '0' (0x0030/48)
    0x00, 0xBD, 0x07, 0x1E, // char '1' (0x0031/49)
    0x00, 0xD9, 0x0F, 0x1E, // char '2' (0x0032/50)
    0x01, 0x15, 0x10, 0x1E, // char '3' (0x0033/51)
    0x01, 0x55, 0x0F, 0x1E, // char '4' (0x0034/52)
    0x01, 0x91, 0x0F, 0x1E, // char '5' (0x0035/53)
    0x01, 0xCD, 0x0F, 0x1E, // char '6' (0x0036/54)
    0x02, 0x09, 0x0F, 0x1E, // char '7' (0x0037/55)
    0x02, 0x45, 0x0F, 0x1E, // char '8' (0x0038/56)
    0x02, 0x81, 0x0F, 0x1E, // char '9' (0x0039/57)
    0x02, 0xBD,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x1E, 0x1E, 0x1E, 0x1E, 0x1E, 0x1E, 0x1E, 0x1E, 0x1E, 0x1E, 0x1E, 0x1E, 0x1E, 0x1E, // char '-' (0x002D/45)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x3F, 0x3F, 0x3F, 0x1E, 0x00, // char '.' (0x002E/46)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xF0, 0xFC, 0xFF, 0xFF, 0x1F, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xE0, 0xFC, 0xFF, 0xFF, 0x1F, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xFC, 0xFF, 0xFF, 0x3F, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x3C, 0x3F, 0x3F, 0x3F, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // char '/' (0x002F/47)
    0xE0, 0xF8, 0xFC, 0xFE, 0x1E, 0x1F, 0x0F, 0x0F, 0x8F, 0xFF, 0xFE, 0xFE, 0xFC, 0xF8, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x80, 0xF0, 0xFC, 0xFF, 0xFF, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0xFF, 0xFF, 0x1F, 0x03, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x07, 0x0F, 0x1F, 0x1F, 0x3F, 0x3C, 0x3C, 0x3C, 0x3C, 0x1E, 0x1F, 0x0F, 0x07, 0x03, // char '0' (0x0030/48)
    0x3C, 0x3E, 0x3E, 0x3F, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x3F, 0x3F, // char '1' (0x0031/49)
    0xE0, 0xF8, 0xFC, 0xFE, 0x3E, 0x1F, 0x0F, 0x0F, 0x0F, 0x1F, 0x1E, 0xFE, 0xFC, 0xF8, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xE0, 0xF0, 0xFC, 0x7F, 0x1F, 0x0F, 0x03, 0x00, 0x00, 0xC0, 0xE0, 0xF8, 0xFC, 0x7F, 0x1F, 0x0F, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x3F, 0x3F, 0x3F, 0x3F, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, // char '2' (0x0032/50)
    0xE0, 0xF8, 0xFC, 0x7E, 0x1E, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x1E, 0x3E, 0xFC, 0xF8, 0xF0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xE0, 0xE0, 0xF0, 0xF8, 0xFF, 0x3F, 0x1F, 0x07, 0xC0, 0xC0, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x03, 0x07, 0xFF, 0xFF, 0xFE, 0xF8, 0x01, 0x07, 0x0F, 0x1F, 0x1E, 0x3C, 0x3C, 0x3C, 0x3C, 0x3E, 0x1E, 0x1F, 0x0F, 0x07, 0x03, 0x00, // char '3' (0x0033/51)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xF0, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xF8, 0xFF, 0x7F, 0x1F, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x80, 0xF0, 0xFC, 0xFF, 0xFF, 0xCF, 0xC3, 0xC0, 0xC0, 0xC0, 0xFF, 0xFF, 0xFF, 0xFF, 0x02, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x3F, 0x3F, 0x3F, 0x3F, // char '4' (0x0034/52)
    0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0x3C, 0x1E, 0x1E, 0x1E, 0x1E, 0x1E, 0x3C, 0xFC, 0xF8, 0xF0, 0xC0, 0xC1, 0xC1, 0xC1, 0xC1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x07, 0x0F, 0x1F, 0x1E, 0x3E, 0x3C, 0x3C, 0x3C, 0x3E, 0x1E, 0x1F, 0x0F, 0x07, 0x01, // char '5' (0x0035/53)
    0xE0, 0xF8, 0xFC, 0xFE, 0x1E, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x1E, 0x7E, 0x7C, 0x78, 0x70, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x78, 0x78, 0x78, 0x78, 0x78, 0xF0, 0xF0, 0xE0, 0xC0, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x07, 0x0F, 0x1F, 0x1E, 0x3E, 0x3C, 0x3C, 0x3C, 0x3C, 0x1E, 0x1F, 0x0F, 0x07, 0x03, // char '6' (0x0036/54)
    0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0xCF, 0xFF, 0xFF, 0xFF, 0x7F, 0x0F, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xF0, 0xFE, 0xFF, 0x7F, 0x1F, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xF0, 0xFE, 0xFF, 0xFF, 0x1F, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x3C, 0x3F, 0x3F, 0x1F, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // char '7' (0x0037/55)
    0xE0, 0xF8, 0xFC, 0xFE, 0x1E, 0x1F, 0x0F, 0x0F, 0x0F, 0x1F, 0x1E, 0xFE, 0xFC, 0xF8, 0xE0, 0x03, 0xCF, 0xFF, 0xFF, 0xFC, 0x7C, 0x78, 0x78, 0x78, 0xF8, 0xFC, 0xFF, 0xFF, 0xCF, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x07, 0x0F, 0x1F, 0x1E, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x1E, 0x1F, 0x0F, 0x07, 0x03, // char '8' (0x0038/56)
    0xF0, 0xF8, 0xFC, 0xFE, 0x1E, 0x1F, 0x0F, 0x0F, 0x0F, 0x1F, 0x3E, 0xFE, 0xFC, 0xF8, 0xE0, 0x3F, 0xFF, 0xFF, 0xFF, 0xC0, 0x80, 0x80, 0x80, 0x80, 0xC0, 0xC0, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x80, 0x81, 0x83, 0x03, 0x07, 0x07, 0x07, 0x07, 0x07, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x07, 0x0F, 0x1F, 0x1E, 0x3C, 0x3C, 0x3C, 0x3C, 0x3E, 0x1E, 0x1F, 0x0F, 0x07, 0x01, // char '9' (0x0039/57)
    0x00, 0x00, 0x00, // end of unicode tables
    // FONT REQUIRES 765 BYTES
};


// ------------------------------------------------------------------------------------------------------------------
// @@-----@@--------------------------------------@@@--------------@@@---@@@@@---------@@@@@-------------------@@----
// @@-----@@---------------------@@---------------@@@-------------@@@@--@@@@@@@-------@@@@@@@------------------@@@---
// @@-----@@---------------------@@---------------@@@-------------@@@@-@@@---@@@-----@@@---@@@------------------@@@--
// @@-----@@---------------------@@---------------@@@-------------@@@@-@@-----@@-----@@---@@@@-------------------@@@-
// @@-----@@---------------------@@---------------@@@------------@@@@@-@@-----@@-----@@---@@@@-------------------@@@-
// @@-----@@---------------------@@---------------@@@------------@@@@@--------@@-----@@---@@@@-------------------@@@-
// @@-----@@---@@@@@-----@@@@@@@-@@-----------@@@@@@@-@@@-------@@@@@@-------@@@-----@@--@@@@@---@@@-------------@@@-
// @@@---@@@--@@@@@@@---@@@@@@@@-@@---------@@@@@@@@@-@@@-------@@-@@@------@@@@-----@@--@@@@@---@@@-------------@@@-
// @@@---@@@-@@@---@@@-@@@---@@@-@@---------@@@---@@@-@@@------@@@-@@@------@@@------@@-@@@-@@---@@@-------------@@@-
// @@@---@@@-@@-----@@-@@-----@@-@@--------@@@----@@@-@@@------@@@-@@@-----@@@-------@@-@@@-@@---@@@-------------@@@-
// @@@---@@@-@@-----@@-@@-----@@-@@--------@@@----@@@---------@@@--@@@-----@@@-------@@-@@@-@@-------------------@@@-
// @@@-@-@@@-@@-----@@-@@--------@@--------@@@----@@@---------@@@--@@@----@@@--------@@@@@--@@-------@@@@@@@@@---@@@-
// @@@-@-@@@-@@-----@@-@@--------@@--------@@@----@@@---------@@---@@@---@@@---------@@@@@--@@-------@@@@@@@@@---@@@-
// @@@@@@@@@-@@-----@@-@@--------@@--------@@@----@@@--------@@@---@@@---@@@---------@@@@@--@@-------------------@@@-
// @@@@@@@@@-@@-----@@-@@--------@@-----@@-@@@----@@@--------@@@@@@@@@--@@@----------@@@@---@@-------------------@@@-
// @@@@-@@@@-@@-----@@-@@--------@@@----@@-@@@----@@@-@@@---@@@@@@@@@@-@@@-------@@@-@@@@---@@---@@@-------------@@@-
// @@@@-@@@@-@@@---@@@-@@--------@@@---@@@--@@@---@@@-@@@----------@@@-@@@-------@@@-@@@---@@@---@@@------------@@@--
// @@@@-@@@@--@@@@@@@--@@---------@@@@@@@----@@@@@@@@-@@@----------@@@-@@@@@@@@@-@@@--@@@@@@@----@@@-----------@@@---
// -@@---@@@---@@@@@---@@----------@@@@@------@@@@@@@-@@@----------@@@-@@@@@@@@@-@@@---@@@@@-----@@@-----------@@----
// ------------------------------------------------------------------------------------------------------------------
// ------------------------------------------------------------------------------------------------------------------
// ------------------------------------------------------------------------------------------------------------------
// ------------------------------------------------------------------------------------------------------------------
extern const uint8_t free_Targa11x24[] PROGMEM;
const uint8_t free_Targa11x24[] PROGMEM =
{
//  type|width|height|first char
    0x02, 0x0B, 0x18, 0x00,
// GROUP first ' ' total 91 chars
//  unicode(LSB,MSB)|count
    0x00, 0x20, 0x5B, // unicode record
    0x00, 0x00, 0x01, 0x00, // char ' ' (0x0020/32)
    0x00, 0x00, 0x02, 0x14, // char '!' (0x0021/33)
    0x00, 0x06, 0x07, 0x06, // char '"' (0x0022/34)
    0x00, 0x0D, 0x09, 0x14, // char '#' (0x0023/35)
    0x00, 0x28, 0x0A, 0x15, // char '$' (0x0024/36)
    0x00, 0x46, 0x09, 0x14, // char '%' (0x0025/37)
    0x00, 0x61, 0x09, 0x14, // char '&' (0x0026/38)
    0x00, 0x7C, 0x02, 0x06, // char ''' (0x0027/39)
    0x00, 0x7E, 0x05, 0x14, // char '(' (0x0028/40)
    0x00, 0x8D, 0x05, 0x14, // char ')' (0x0029/41)
    0x00, 0x9C, 0x0A, 0x0A, // char '*' (0x002A/42)
    0x00, 0xB0, 0x0A, 0x12, // char '+' (0x002B/43)
    0x00, 0xCE, 0x05, 0x17, // char ',' (0x002C/44)
    0x00, 0xDD, 0x09, 0x0E, // char '-' (0x002D/45)
    0x00, 0xEF, 0x03, 0x14, // char '.' (0x002E/46)
    0x00, 0xF8, 0x0A, 0x14, // char '/' (0x002F/47)
    0x01, 0x16, 0x09, 0x14, // char '0' (0x0030/48)
    0x01, 0x31, 0x05, 0x14, // char '1' (0x0031/49)
    0x01, 0x40, 0x09, 0x14, // char '2' (0x0032/50)
    0x01, 0x5B, 0x0A, 0x14, // char '3' (0x0033/51)
    0x01, 0x79, 0x0A, 0x14, // char '4' (0x0034/52)
    0x01, 0x97, 0x09, 0x14, // char '5' (0x0035/53)
    0x01, 0xB2, 0x09, 0x14, // char '6' (0x0036/54)
    0x01, 0xCD, 0x09, 0x14, // char '7' (0x0037/55)
    0x01, 0xE8, 0x09, 0x14, // char '8' (0x0038/56)
    0x02, 0x03, 0x09, 0x14, // char '9' (0x0039/57)
    0x02, 0x1E, 0x03, 0x14, // char ':' (0x003A/58)
    0x02, 0x27, 0x05, 0x17, // char ';' (0x003B/59)
    0x02, 0x36, 0x0A, 0x12, // char '<' (0x003C/60)
    0x02, 0x54, 0x09, 0x10, // char '=' (0x003D/61)
    0x02, 0x66, 0x09, 0x11, // char '>' (0x003E/62)
    0x02, 0x81, 0x0A, 0x14, // char '?' (0x003F/63)
    0x02, 0x9F, 0x09, 0x14, // char '@' (0x0040/64)
    0x02, 0xBA, 0x0A, 0x14, // char 'A' (0x0041/65)
    0x02, 0xD8, 0x09, 0x14, // char 'B' (0x0042/66)
    0x02, 0xF3, 0x09, 0x14, // char 'C' (0x0043/67)
    0x03, 0x0E, 0x09, 0x14, // char 'D' (0x0044/68)
    0x03, 0x29, 0x09, 0x14, // char 'E' (0x0045/69)
    0x03, 0x44, 0x09, 0x14, // char 'F' (0x0046/70)
    0x03, 0x5F, 0x09, 0x14, // char 'G' (0x0047/71)
    0x03, 0x7A, 0x09, 0x14, // char 'H' (0x0048/72)
    0x03, 0x95, 0x09, 0x14, // char 'I' (0x0049/73)
    0x03, 0xB0, 0x0A, 0x14, // char 'J' (0x004A/74)
    0x03, 0xCE, 0x0A, 0x14, // char 'K' (0x004B/75)
    0x03, 0xEC, 0x09, 0x14, // char 'L' (0x004C/76)
    0x04, 0x07, 0x0A, 0x14, // char 'M' (0x004D/77)
    0x04, 0x25, 0x09, 0x14, // char 'N' (0x004E/78)
    0x04, 0x40, 0x09, 0x14, // char 'O' (0x004F/79)
    0x04, 0x5B, 0x09, 0x14, // char 'P' (0x0050/80)
    0x04, 0x76, 0x0A, 0x18, // char 'Q' (0x0051/81)
    0x04, 0x94, 0x0A, 0x14, // char 'R' (0x0052/82)
    0x04, 0xB2, 0x09, 0x14, // char 'S' (0x0053/83)
    0x04, 0xCD, 0x0A, 0x14, // char 'T' (0x0054/84)
    0x04, 0xEB, 0x09, 0x14, // char 'U' (0x0055/85)
    0x05, 0x06, 0x0A, 0x14, // char 'V' (0x0056/86)
    0x05, 0x24, 0x09, 0x14, // char 'W' (0x0057/87)
    0x05, 0x3F, 0x09, 0x14, // char 'X' (0x0058/88)
    0x05, 0x5A, 0x0A, 0x14, // char 'Y' (0x0059/89)
    0x05, 0x78, 0x09, 0x14, // char 'Z' (0x005A/90)
    0x05, 0x93, 0x06, 0x14, // char '[' (0x005B/91)
    0x05, 0xA5, 0x0A, 0x14, // char '\' (0x005C/92)
    0x05, 0xC3, 0x05, 0x14, // char ']' (0x005D/93)
    0x05, 0xD2, 0x0A, 0x0B, // char '^' (0x005E/94)
    0x05, 0xE6, 0x09, 0x14, // char '_' (0x005F/95)
    0x06, 0x01, 0x05, 0x06, // char '`' (0x0060/96)
    0x06, 0x06, 0x09, 0x14, // char 'a' (0x0061/97)
    0x06, 0x21, 0x09, 0x14, // char 'b' (0x0062/98)
    0x06, 0x3C, 0x09, 0x14, // char 'c' (0x0063/99)
    0x06, 0x57, 0x0A, 0x14, // char 'd' (0x0064/100)
    0x06, 0x75, 0x09, 0x14, // char 'e' (0x0065/101)
    0x06, 0x90, 0x09, 0x14, // char 'f' (0x0066/102)
    0x06, 0xAB, 0x09, 0x18, // char 'g' (0x0067/103)
    0x06, 0xC6, 0x09, 0x14, // char 'h' (0x0068/104)
    0x06, 0xE1, 0x0A, 0x14, // char 'i' (0x0069/105)
    0x06, 0xFF, 0x0A, 0x18, // char 'j' (0x006A/106)
    0x07, 0x1D, 0x0A, 0x14, // char 'k' (0x006B/107)
    0x07, 0x3B, 0x09, 0x14, // char 'l' (0x006C/108)
    0x07, 0x56, 0x09, 0x14, // char 'm' (0x006D/109)
    0x07, 0x71, 0x09, 0x14, // char 'n' (0x006E/110)
    0x07, 0x8C, 0x09, 0x14, // char 'o' (0x006F/111)
    0x07, 0xA7, 0x09, 0x18, // char 'p' (0x0070/112)
    0x07, 0xC2, 0x0A, 0x18, // char 'q' (0x0071/113)
    0x07, 0xE0, 0x09, 0x14, // char 'r' (0x0072/114)
    0x07, 0xFB, 0x09, 0x14, // char 's' (0x0073/115)
    0x08, 0x16, 0x09, 0x14, // char 't' (0x0074/116)
    0x08, 0x31, 0x09, 0x14, // char 'u' (0x0075/117)
    0x08, 0x4C, 0x0A, 0x14, // char 'v' (0x0076/118)
    0x08, 0x6A, 0x09, 0x14, // char 'w' (0x0077/119)
    0x08, 0x85, 0x09, 0x14, // char 'x' (0x0078/120)
    0x08, 0xA0, 0x09, 0x18, // char 'y' (0x0079/121)
    0x08, 0xBB, 0x09, 0x14, // char 'z' (0x007A/122)
    0x08, 0xD6,
    // char ' ' (0x0020/32)
    0xFE, 0xFE, 0x7F, 0x7F, 0x0C, 0x0C, // char '!' (0x0021/33)
    0x3E, 0x3E, 0x00, 0x00, 0x00, 0x3E, 0x3E, // char '"' (0x0022/34)
    0x00, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0xC0, 0xC0, 0x00, 0xC6, 0xFF, 0xFF, 0xC6, 0xC6, 0xC6, 0xFF, 0xFF, 0xC6, 0x00, 0x0F, 0x0F, 0x00, 0x00, 0x00, 0x0F, 0x0F, 0x00, // char '#' (0x0023/35)
    0x20, 0xF8, 0xFC, 0x8E, 0xFF, 0xFF, 0x0E, 0x1C, 0x3C, 0x30, 0x80, 0x81, 0x83, 0x07, 0xFF, 0xFF, 0x1C, 0x38, 0xF0, 0xE0, 0x00, 0x03, 0x07, 0x0E, 0x1F, 0x1F, 0x0E, 0x07, 0x07, 0x01, // char '$' (0x0024/36)
    0x1C, 0x3E, 0x3E, 0x3E, 0x88, 0xF0, 0xFE, 0x3E, 0x0E, 0x00, 0x80, 0xF0, 0xFC, 0x3F, 0x0F, 0x81, 0x80, 0x00, 0x0C, 0x0F, 0x0F, 0x01, 0x00, 0x07, 0x0F, 0x0F, 0x07, // char '%' (0x0025/37)
    0xF8, 0xFC, 0x8E, 0x06, 0x06, 0x06, 0x8E, 0xFC, 0xF8, 0xFC, 0xFF, 0x07, 0x07, 0x07, 0x07, 0x0F, 0x1D, 0x1C, 0x03, 0x07, 0x0E, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, // char '&' (0x0026/38)
    0x3E, 0x3E, // char ''' (0x0027/39)
    0xF8, 0xFC, 0x0E, 0x06, 0x06, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x03, 0x07, 0x0E, 0x0C, 0x0C, // char '(' (0x0028/40)
    0x06, 0x0E, 0xFC, 0xF8, 0xF0, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x0C, 0x0E, 0x07, 0x03, 0x01, // char ')' (0x0029/41)
    0x60, 0x68, 0xFC, 0xFC, 0xFE, 0xFE, 0xFE, 0xFC, 0xFC, 0x60, 0x00, 0x00, 0x01, 0x01, 0x03, 0x03, 0x03, 0x01, 0x01, 0x00, // char '*' (0x002A/42)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x30, 0x30, 0xFF, 0xFF, 0x30, 0x30, 0x30, 0x30, 0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, // char '+' (0x002B/43)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x7C, 0x3C, 0x04, // char ',' (0x002C/44)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, // char '-' (0x002D/45)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x0F, 0x0F, // char '.' (0x002E/46)
    0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xF8, 0xFE, 0x1E, 0x02, 0x00, 0x00, 0xC0, 0xF8, 0xFF, 0x1F, 0x03, 0x00, 0x00, 0x00, 0x08, 0x0F, 0x0F, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // char '/' (0x002F/47)
    0xF8, 0xFC, 0x0E, 0x06, 0x86, 0xF6, 0xFE, 0xFC, 0xF8, 0xFF, 0xFF, 0xF0, 0xFE, 0x7F, 0x0F, 0x01, 0xFF, 0xFF, 0x03, 0x07, 0x0F, 0x0D, 0x0C, 0x0C, 0x0E, 0x07, 0x03, // char '0' (0x0030/48)
    0x1C, 0x1C, 0xFE, 0xFE, 0xFE, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x0F, 0x0F, 0x0F, // char '1' (0x0031/49)
    0x38, 0x3C, 0x0E, 0x06, 0x06, 0x06, 0x8E, 0xFC, 0xF8, 0x00, 0x80, 0xE0, 0xF0, 0x7C, 0x1F, 0x0F, 0x03, 0x01, 0x0F, 0x0F, 0x0F, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, // char '2' (0x0032/50)
    0x18, 0x1C, 0x0E, 0x06, 0x06, 0x06, 0x0E, 0xFC, 0xF8, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x06, 0x0E, 0x1F, 0xFF, 0xFB, 0xE0, 0x03, 0x07, 0x0E, 0x0C, 0x0C, 0x0C, 0x0E, 0x07, 0x03, 0x00, // char '3' (0x0033/51)
    0x00, 0x00, 0x00, 0x00, 0x80, 0xE0, 0xFC, 0xFE, 0xFE, 0xFE, 0x00, 0xC0, 0xF8, 0xFE, 0x9F, 0x87, 0x80, 0xFF, 0xFF, 0xFF, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x0F, 0x0F, 0x0F, // char '4' (0x0034/52)
    0xFE, 0xFE, 0x86, 0x86, 0x86, 0x86, 0x86, 0x06, 0x06, 0x87, 0x87, 0x03, 0x01, 0x01, 0x01, 0x03, 0xFF, 0xFE, 0x03, 0x07, 0x0E, 0x0C, 0x0C, 0x0C, 0x0E, 0x07, 0x03, // char '5' (0x0035/53)
    0xF8, 0xFC, 0x0E, 0x06, 0x06, 0x06, 0x0E, 0x3C, 0x38, 0xFF, 0xFF, 0x07, 0x03, 0x03, 0x03, 0x07, 0xFE, 0xFC, 0x03, 0x07, 0x0E, 0x0C, 0x0C, 0x0C, 0x0E, 0x07, 0x03, // char '6' (0x0036/54)
    0x06, 0x06, 0x06, 0x06, 0xC6, 0xF6, 0xFE, 0x3E, 0x06, 0x00, 0x80, 0xF0, 0xFE, 0x3F, 0x0F, 0x01, 0x00, 0x00, 0x0E, 0x0F, 0x0F, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // char '7' (0x0037/55)
    0xF8, 0xFC, 0x8E, 0x06, 0x06, 0x06, 0x8E, 0xFC, 0xF8, 0xFC, 0xFF, 0x07, 0x03, 0x03, 0x03, 0x07, 0xFF, 0xFC, 0x03, 0x07, 0x0E, 0x0C, 0x0C, 0x0C, 0x0E, 0x07, 0x03, // char '8' (0x0038/56)
    0xF8, 0xFC, 0x0E, 0x06, 0x06, 0x06, 0x0E, 0xFC, 0xF8, 0x87, 0x8F, 0x1C, 0x18, 0x18, 0x18, 0x1C, 0xFF, 0xFF, 0x03, 0x07, 0x0E, 0x0C, 0x0C, 0x0C, 0x0E, 0x07, 0x03, // char '9' (0x0039/57)
    0x80, 0x80, 0x80, 0x07, 0x07, 0x07, 0x0F, 0x0F, 0x0F, // char ':' (0x003A/58)
    0x00, 0x00, 0x80, 0x80, 0x80, 0x00, 0x00, 0x07, 0x07, 0x07, 0x00, 0x70, 0x7C, 0x3C, 0x04, // char ';' (0x003B/59)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x78, 0x78, 0x7C, 0xFC, 0xEC, 0xCE, 0xCE, 0xC7, 0x87, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x03, // char '<' (0x003C/60)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, // char '=' (0x003D/61)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x87, 0xC6, 0xCE, 0xEE, 0xFC, 0xFC, 0x7C, 0x78, 0x38, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // char '>' (0x003E/62)
    0x70, 0x7C, 0x7C, 0x0E, 0x06, 0x06, 0x06, 0x1C, 0xFC, 0xF0, 0x00, 0x00, 0x00, 0x7C, 0x7E, 0x06, 0x06, 0x07, 0x03, 0x01, 0x00, 0x00, 0x00, 0x0C, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, // char '?' (0x003F/63)
    0xF8, 0xFC, 0x0E, 0x06, 0x06, 0x86, 0xCE, 0xFC, 0xF8, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x1F, 0x3F, 0x7F, 0x7F, 0x03, 0x07, 0x0F, 0x0E, 0x0C, 0x00, 0x00, 0x00, 0x00, // char '@' (0x0040/64)
    0x00, 0x00, 0x00, 0xF0, 0xFE, 0xFE, 0xFC, 0x80, 0x00, 0x00, 0x00, 0xC0, 0xFE, 0xFF, 0x87, 0x81, 0xBF, 0xFF, 0xF0, 0x00, 0x08, 0x0F, 0x0F, 0x01, 0x01, 0x01, 0x01, 0x07, 0x0F, 0x0E, // char 'A' (0x0041/65)
    0xFE, 0xFE, 0x06, 0x06, 0x06, 0x06, 0x0C, 0xFC, 0xF8, 0xFF, 0xFF, 0x06, 0x06, 0x06, 0x06, 0x1F, 0xFB, 0xF1, 0x0F, 0x0F, 0x0C, 0x0C, 0x0C, 0x0C, 0x07, 0x07, 0x03, // char 'B' (0x0042/66)
    0xF8, 0xFC, 0x0E, 0x06, 0x06, 0x06, 0x0E, 0x3C, 0x38, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x03, 0x07, 0x0E, 0x0C, 0x0C, 0x0C, 0x0E, 0x07, 0x03, // char 'C' (0x0043/67)
    0xFE, 0xFE, 0x06, 0x06, 0x06, 0x06, 0x0E, 0xFC, 0xF8, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x0F, 0x0F, 0x0C, 0x0C, 0x0C, 0x0C, 0x0E, 0x07, 0x03, // char 'D' (0x0044/68)
    0xFE, 0xFE, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0xFF, 0xFF, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x00, 0x0F, 0x0F, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, // char 'E' (0x0045/69)
    0xFE, 0xFE, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0xFF, 0xFF, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x00, 0x0F, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // char 'F' (0x0046/70)
    0xF8, 0xFC, 0x0E, 0x06, 0x06, 0x06, 0x0E, 0x3C, 0x38, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x60, 0x60, 0xE0, 0xE0, 0x03, 0x07, 0x0E, 0x0C, 0x0C, 0x0C, 0x0E, 0x07, 0x03, // char 'G' (0x0047/71)
    0xFE, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFE, 0xFF, 0xFF, 0x06, 0x06, 0x06, 0x06, 0x06, 0xFF, 0xFF, 0x0F, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x0F, // char 'H' (0x0048/72)
    0x06, 0x06, 0x06, 0xFE, 0xFE, 0xFE, 0x06, 0x06, 0x06, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x0C, 0x0C, 0x0C, 0x0F, 0x0F, 0x0F, 0x0C, 0x0C, 0x0C, // char 'I' (0x0049/73)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFE, 0xFE, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x01, 0x07, 0x07, 0x0C, 0x0C, 0x0C, 0x0E, 0x07, 0x07, 0x01, // char 'J' (0x004A/74)
    0xFE, 0xFE, 0x00, 0x80, 0xE0, 0xF8, 0x3C, 0x0E, 0x06, 0x00, 0xFF, 0xFF, 0x1F, 0x3F, 0xFB, 0xE0, 0x80, 0x00, 0x00, 0x00, 0x0F, 0x0F, 0x00, 0x00, 0x00, 0x03, 0x07, 0x0E, 0x0C, 0x00, // char 'K' (0x004B/75)
    0xFE, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x0F, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, // char 'L' (0x004C/76)
    0xFE, 0xFE, 0x3E, 0x78, 0xF0, 0xF8, 0x3E, 0xFE, 0xFE, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x01, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x0F, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x0F, 0x00, // char 'M' (0x004D/77)
    0xFE, 0xFE, 0xFC, 0xF0, 0x80, 0x00, 0x00, 0xFE, 0xFE, 0xFF, 0xFF, 0x00, 0x07, 0x3F, 0xFE, 0xF0, 0xFF, 0xFF, 0x0F, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x07, 0x0F, 0x0F, // char 'N' (0x004E/78)
    0xF8, 0xFC, 0x0E, 0x06, 0x06, 0x06, 0x0E, 0xFC, 0xF8, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x03, 0x07, 0x0E, 0x0C, 0x0C, 0x0C, 0x0E, 0x07, 0x03, // char 'O' (0x004F/79)
    0xFE, 0xFE, 0x06, 0x06, 0x06, 0x06, 0x0E, 0xFC, 0xF8, 0xFF, 0xFF, 0x06, 0x06, 0x06, 0x06, 0x03, 0x03, 0x01, 0x0F, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // char 'P' (0x0050/80)
    0xE0, 0xF8, 0xFC, 0x0E, 0x06, 0x06, 0x06, 0x1C, 0xFC, 0xF8, 0xFF, 0xFF, 0xFF, 0x00, 0x80, 0x80, 0x80, 0x00, 0xFF, 0xFF, 0x00, 0x03, 0x07, 0x0E, 0x0F, 0x0F, 0x7F, 0xFF, 0xF7, 0x83, // char 'Q' (0x0051/81)
    0xFE, 0xFE, 0x06, 0x06, 0x06, 0x06, 0x0E, 0xFC, 0xF8, 0x00, 0xFF, 0xFF, 0x06, 0x06, 0x1E, 0xFE, 0xF7, 0x83, 0x01, 0x00, 0x0F, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x07, 0x0F, 0x0E, 0x00, // char 'R' (0x0052/82)
    0xF8, 0xFC, 0x8E, 0x06, 0x06, 0x06, 0x1C, 0x3C, 0x38, 0x81, 0x83, 0x07, 0x0F, 0x1E, 0x1C, 0x38, 0xF0, 0xE0, 0x03, 0x07, 0x0E, 0x0C, 0x0C, 0x0C, 0x06, 0x07, 0x03, // char 'S' (0x0053/83)
    0x06, 0x06, 0x06, 0x06, 0xFE, 0xFE, 0x06, 0x06, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x0F, 0x00, 0x00, 0x00, 0x00, // char 'T' (0x0054/84)
    0xFE, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFE, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x03, 0x07, 0x0E, 0x0C, 0x0C, 0x0C, 0x0E, 0x07, 0x03, // char 'U' (0x0055/85)
    0x02, 0x7E, 0xFE, 0xE0, 0x00, 0x00, 0x80, 0xFC, 0xFE, 0x0E, 0x00, 0x00, 0x0F, 0xFF, 0xFC, 0xF0, 0xFF, 0x3F, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0F, 0x0F, 0x07, 0x00, 0x00, 0x00, // char 'V' (0x0056/86)
    0xFE, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFE, 0xFF, 0xFF, 0xFF, 0xC0, 0xF0, 0xC0, 0xFF, 0xFF, 0xFF, 0x07, 0x0F, 0x0F, 0x07, 0x00, 0x07, 0x0F, 0x0F, 0x0F, // char 'W' (0x0057/87)
    0x06, 0x3E, 0xFE, 0xF0, 0x80, 0xF0, 0xFE, 0x3E, 0x0E, 0x00, 0x80, 0xF1, 0xFF, 0x3F, 0xFF, 0xF1, 0x80, 0x00, 0x0C, 0x0F, 0x0F, 0x01, 0x00, 0x01, 0x07, 0x0F, 0x0E, // char 'X' (0x0058/88)
    0x02, 0x0E, 0x7E, 0xFC, 0xE0, 0xC0, 0xF8, 0xFE, 0x1E, 0x06, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x0F, 0x00, 0x00, 0x00, 0x00, // char 'Y' (0x0059/89)
    0x06, 0x06, 0x06, 0x06, 0xC6, 0xF6, 0xFE, 0x3E, 0x06, 0x00, 0x80, 0xF0, 0xFE, 0x3F, 0x0F, 0x01, 0x00, 0x00, 0x0E, 0x0F, 0x0F, 0x0D, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, // char 'Z' (0x005A/90)
    0xFE, 0xFE, 0x06, 0x06, 0x06, 0x06, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x0F, 0x0C, 0x0C, 0x0C, 0x0C, // char '[' (0x005B/91)
    0x02, 0x1E, 0x7E, 0xF8, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x1F, 0xFF, 0xF8, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x0F, 0x0F, 0x08, // char '\' (0x005C/92)
    0x06, 0x06, 0x06, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x0C, 0x0C, 0x0C, 0x0F, 0x0F, // char ']' (0x005D/93)
    0x00, 0x00, 0xE0, 0xF8, 0x7E, 0x3E, 0xFE, 0xF0, 0xC0, 0x00, 0x00, 0x07, 0x07, 0x03, 0x00, 0x00, 0x01, 0x07, 0x07, 0x06, // char '^' (0x005E/94)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, // char '_' (0x005F/95)
    0x00, 0x0E, 0x3E, 0x3C, 0x20, // char '`' (0x0060/96)
    0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xFE, 0xFF, 0x03, 0x01, 0x01, 0x01, 0x03, 0xFF, 0xFF, 0x03, 0x07, 0x0E, 0x0C, 0x0C, 0x0C, 0x0E, 0x0F, 0x0F, // char 'a' (0x0061/97)
    0xFE, 0xFE, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0xFF, 0xFF, 0x03, 0x01, 0x01, 0x01, 0x03, 0xFF, 0xFE, 0x0F, 0x0F, 0x0E, 0x0C, 0x0C, 0x0C, 0x0E, 0x07, 0x03, // char 'b' (0x0062/98)
    0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0xFE, 0xFF, 0x03, 0x01, 0x01, 0x01, 0x03, 0x8F, 0x8E, 0x03, 0x07, 0x0E, 0x0C, 0x0C, 0x0C, 0x0E, 0x07, 0x03, // char 'c' (0x0063/99)
    0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0xFE, 0xFE, 0xFE, 0xFC, 0xFF, 0xFF, 0x03, 0x01, 0x01, 0x01, 0xFF, 0xFF, 0xFF, 0x01, 0x03, 0x07, 0x0E, 0x0C, 0x0C, 0x0C, 0x0F, 0x0F, 0x0F, // char 'd' (0x0064/100)
    0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0xFE, 0xFF, 0x1B, 0x19, 0x19, 0x19, 0x1B, 0x9F, 0x9E, 0x03, 0x07, 0x0E, 0x0C, 0x0C, 0x0C, 0x0E, 0x07, 0x03, // char 'e' (0x0065/101)
    0xF8, 0xFC, 0x0E, 0x06, 0x06, 0x06, 0x0E, 0x3C, 0x38, 0xFF, 0xFF, 0x06, 0x06, 0x06, 0x06, 0x06, 0x00, 0x00, 0x0F, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // char 'f' (0x0066/102)
    0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xFE, 0xFF, 0x03, 0x01, 0x01, 0x01, 0x03, 0xFF, 0xFF, 0x73, 0xF7, 0xCE, 0x8C, 0x8C, 0x8C, 0xCE, 0xFF, 0x7F, // char 'g' (0x0067/103)
    0xFE, 0xFE, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0xFF, 0xFF, 0x03, 0x01, 0x01, 0x01, 0x03, 0xFF, 0xFE, 0x0F, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x0F, // char 'h' (0x0068/104)
    0x80, 0x80, 0x80, 0x0C, 0x1E, 0x1E, 0x0C, 0x00, 0x00, 0x00, 0x01, 0x03, 0x03, 0x07, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x0C, 0x0C, 0x0C, 0x0F, 0x0F, 0x0C, 0x0C, 0x0C, 0x0C, // char 'i' (0x0069/105)
    0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x9E, 0x9E, 0x9E, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0xFF, 0xFF, 0xFF, 0x30, 0xF0, 0xF0, 0xC0, 0x80, 0x80, 0xC0, 0xFF, 0x7F, 0x3F, // char 'j' (0x006A/106)
    0xFE, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x00, 0xFF, 0xFF, 0x0F, 0x3C, 0xF8, 0xFE, 0x8F, 0x03, 0x01, 0x00, 0x0F, 0x0F, 0x00, 0x00, 0x00, 0x03, 0x07, 0x0F, 0x0C, 0x00, // char 'k' (0x006B/107)
    0xFC, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x03, 0x07, 0x0F, 0x0C, 0x0C, 0x0C, 0x0E, 0x07, 0x03, // char 'l' (0x006C/108)
    0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0xFF, 0xFF, 0x01, 0xFF, 0xFF, 0xFF, 0x01, 0xFF, 0xFF, 0x0F, 0x0F, 0x00, 0x0F, 0x0F, 0x0F, 0x00, 0x0F, 0x0F, // char 'm' (0x006D/109)
    0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0xFF, 0xFF, 0x03, 0x01, 0x01, 0x01, 0x03, 0xFF, 0xFE, 0x0F, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x0F, // char 'n' (0x006E/110)
    0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0xFE, 0xFF, 0x03, 0x01, 0x01, 0x01, 0x03, 0xFF, 0xFE, 0x03, 0x07, 0x0E, 0x0C, 0x0C, 0x0C, 0x0E, 0x07, 0x03, // char 'o' (0x006F/111)
    0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0xFF, 0xFF, 0x03, 0x01, 0x01, 0x01, 0x03, 0xFF, 0xFE, 0xFF, 0xFF, 0x0E, 0x0C, 0x0C, 0x0C, 0x0E, 0x07, 0x03, // char 'p' (0x0070/112)
    0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xFC, 0xFF, 0xFF, 0x03, 0x01, 0x01, 0x01, 0xFF, 0xFF, 0xFF, 0x01, 0x03, 0x07, 0x0E, 0x0C, 0x0C, 0x0E, 0xFF, 0xFF, 0xFF, // char 'q' (0x0071/113)
    0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xFE, 0xFF, 0x03, 0x01, 0x01, 0x01, 0x03, 0x0F, 0x0F, 0x0F, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // char 'r' (0x0072/114)
    0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0xBE, 0xBF, 0x3B, 0x71, 0x71, 0x71, 0xE7, 0xEF, 0xCE, 0x03, 0x07, 0x0E, 0x0C, 0x0C, 0x0C, 0x06, 0x07, 0x03, // char 's' (0x0073/115)
    0xFE, 0xFE, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0xFF, 0xFF, 0x01, 0x01, 0x01, 0x01, 0x01, 0x80, 0x80, 0x03, 0x07, 0x0E, 0x0C, 0x0C, 0x0C, 0x0E, 0x07, 0x03, // char 't' (0x0074/116)
    0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x03, 0x07, 0x0E, 0x0C, 0x0C, 0x0C, 0x0E, 0x0F, 0x0F, // char 'u' (0x0075/117)
    0x00, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x00, 0x07, 0x3F, 0xFE, 0xE0, 0xC0, 0xF8, 0xFF, 0x1F, 0x01, 0x00, 0x00, 0x00, 0x03, 0x0F, 0x0F, 0x0F, 0x00, 0x00, 0x00, // char 'v' (0x0076/118)
    0x80, 0x80, 0x00, 0x80, 0x80, 0x80, 0x00, 0x80, 0x80, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0x07, 0x0F, 0x0C, 0x0F, 0x0F, 0x0F, 0x0C, 0x0F, 0x0F, // char 'w' (0x0077/119)
    0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x03, 0x07, 0x07, 0xFE, 0xFE, 0xFE, 0x07, 0x07, 0x03, 0x0E, 0x0F, 0x07, 0x03, 0x03, 0x03, 0x07, 0x0F, 0x0E, // char 'x' (0x0078/120)
    0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x73, 0xF7, 0xCE, 0x8C, 0x8C, 0x8C, 0xCE, 0xFF, 0x7F, // char 'y' (0x0079/121)
    0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x01, 0x01, 0x81, 0xE1, 0xF9, 0x3F, 0x0F, 0x03, 0x00, 0x08, 0x0E, 0x0F, 0x0F, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, // char 'z' (0x007A/122)
    0x00, 0x00, 0x00, // end of unicode tables
    // FONT REQUIRES 2638 BYTES
};

// -------------------------------------------------------------------------------------------
// @@---@@-----------------------------@@------------@@---@@@---------@@@----------------@@---
// -@---@@-----------------@-----------@@-----------@@@--@@@@@-------@@@@@---------------@@@--
// -@---@@-----------------@-----------@@-----------@@@--@---@@------@--@@@----------------@@-
// -@---@@-----------------@-----------@@----------@@@@------@@-----@@--@@@----------------@@-
// -@---@@---@@@-----@@@@@-@--------@@@@@--@@------@-@@------@@-----@@--@@@----@@----------@@-
// -@---@@--@@@@@---@@@@@@-@-------@@@@@@--@@-----@@-@@-----@@------@@-@@@@----@@----------@@-
// -@---@@-@@---@@--@---@@-@------@@---@@---------@@-@@-----@-------@@-@@@@----------------@@-
// -@---@@-@@---@@-@@------@------@@---@@---------@--@@----@@-------@@@@-@@-------@@@@@@---@@-
// -@@@-@@-@@---@@-@@------@------@@---@@--------@@--@@---@@--------@@@@-@@-------@@@@@@---@@-
// -@@@-@--@@---@@-@@------@------@@---@@--------@@@@@@---@---------@@@--@@----------------@@-
// -@@@@@--@@---@@-@@------@---@@-@@---@@-------@@@@@@@--@@----------@@--@@----------------@@-
// -@@-@@---@@@@@--@@------@@@@@@--@@@@@@--@@--------@@-@@@@@@@--@@--@@@@@-----@@--------@@@--
// -@@-@@----@@@---@@-------@@@@----@@@@@--@@--------@@-@@@@@@@--@@---@@@------@@--------@@---
// -------------------------------------------------------------------------------------------
// -------------------------------------------------------------------------------------------
extern const uint8_t free_Targa8x16[] PROGMEM;
const uint8_t free_Targa8x16[] PROGMEM =
{
//  type|width|height|first char
    0x02, 0x08, 0x10, 0x00,
// GROUP first ' ' total 91 chars
//  unicode(LSB,MSB)|count
    0x00, 0x20, 0x5B, // unicode record
    0x00, 0x00, 0x01, 0x00, // char ' ' (0x0020/32)
    0x00, 0x00, 0x02, 0x0E, // char '!' (0x0021/33)
    0x00, 0x04, 0x04, 0x04, // char '"' (0x0022/34)
    0x00, 0x08, 0x07, 0x0E, // char '#' (0x0023/35)
    0x00, 0x16, 0x07, 0x0F, // char '$' (0x0024/36)
    0x00, 0x24, 0x07, 0x0E, // char '%' (0x0025/37)
    0x00, 0x32, 0x07, 0x0E, // char '&' (0x0026/38)
    0x00, 0x40, 0x01, 0x04, // char ''' (0x0027/39)
    0x00, 0x41, 0x04, 0x0E, // char '(' (0x0028/40)
    0x00, 0x49, 0x04, 0x0E, // char ')' (0x0029/41)
    0x00, 0x51, 0x07, 0x08, // char '*' (0x002A/42)
    0x00, 0x58, 0x07, 0x0C, // char '+' (0x002B/43)
    0x00, 0x66, 0x03, 0x10, // char ',' (0x002C/44)
    0x00, 0x6C, 0x06, 0x0A, // char '-' (0x002D/45)
    0x00, 0x78, 0x03, 0x0E, // char '.' (0x002E/46)
    0x00, 0x7E, 0x07, 0x0E, // char '/' (0x002F/47)
    0x00, 0x8C, 0x07, 0x0E, // char '0' (0x0030/48)
    0x00, 0x9A, 0x03, 0x0E, // char '1' (0x0031/49)
    0x00, 0xA0, 0x07, 0x0E, // char '2' (0x0032/50)
    0x00, 0xAE, 0x07, 0x0E, // char '3' (0x0033/51)
    0x00, 0xBC, 0x07, 0x0E, // char '4' (0x0034/52)
    0x00, 0xCA, 0x07, 0x0E, // char '5' (0x0035/53)
    0x00, 0xD8, 0x07, 0x0E, // char '6' (0x0036/54)
    0x00, 0xE6, 0x07, 0x0E, // char '7' (0x0037/55)
    0x00, 0xF4, 0x07, 0x0E, // char '8' (0x0038/56)
    0x01, 0x02, 0x07, 0x0E, // char '9' (0x0039/57)
    0x01, 0x10, 0x03, 0x0E, // char ':' (0x003A/58)
    0x01, 0x16, 0x03, 0x10, // char ';' (0x003B/59)
    0x01, 0x1C, 0x07, 0x0C, // char '<' (0x003C/60)
    0x01, 0x2A, 0x06, 0x0C, // char '=' (0x003D/61)
    0x01, 0x36, 0x06, 0x0C, // char '>' (0x003E/62)
    0x01, 0x42, 0x07, 0x0E, // char '?' (0x003F/63)
    0x01, 0x50, 0x07, 0x0E, // char '@' (0x0040/64)
    0x01, 0x5E, 0x07, 0x0E, // char 'A' (0x0041/65)
    0x01, 0x6C, 0x06, 0x0E, // char 'B' (0x0042/66)
    0x01, 0x78, 0x07, 0x0E, // char 'C' (0x0043/67)
    0x01, 0x86, 0x06, 0x0E, // char 'D' (0x0044/68)
    0x01, 0x92, 0x06, 0x0E, // char 'E' (0x0045/69)
    0x01, 0x9E, 0x06, 0x0E, // char 'F' (0x0046/70)
    0x01, 0xAA, 0x07, 0x0E, // char 'G' (0x0047/71)
    0x01, 0xB8, 0x06, 0x0E, // char 'H' (0x0048/72)
    0x01, 0xC4, 0x07, 0x0E, // char 'I' (0x0049/73)
    0x01, 0xD2, 0x07, 0x0E, // char 'J' (0x004A/74)
    0x01, 0xE0, 0x06, 0x0E, // char 'K' (0x004B/75)
    0x01, 0xEC, 0x06, 0x0E, // char 'L' (0x004C/76)
    0x01, 0xF8, 0x06, 0x0E, // char 'M' (0x004D/77)
    0x02, 0x04, 0x06, 0x0E, // char 'N' (0x004E/78)
    0x02, 0x10, 0x07, 0x0E, // char 'O' (0x004F/79)
    0x02, 0x1E, 0x06, 0x0E, // char 'P' (0x0050/80)
    0x02, 0x2A, 0x07, 0x10, // char 'Q' (0x0051/81)
    0x02, 0x38, 0x06, 0x0E, // char 'R' (0x0052/82)
    0x02, 0x44, 0x07, 0x0E, // char 'S' (0x0053/83)
    0x02, 0x52, 0x07, 0x0E, // char 'T' (0x0054/84)
    0x02, 0x60, 0x06, 0x0E, // char 'U' (0x0055/85)
    0x02, 0x6C, 0x07, 0x0E, // char 'V' (0x0056/86)
    0x02, 0x7A, 0x07, 0x0E, // char 'W' (0x0057/87)
    0x02, 0x88, 0x07, 0x0E, // char 'X' (0x0058/88)
    0x02, 0x96, 0x07, 0x0E, // char 'Y' (0x0059/89)
    0x02, 0xA4, 0x07, 0x0E, // char 'Z' (0x005A/90)
    0x02, 0xB2, 0x04, 0x0E, // char '[' (0x005B/91)
    0x02, 0xBA, 0x07, 0x0E, // char '\' (0x005C/92)
    0x02, 0xC8, 0x04, 0x0E, // char ']' (0x005D/93)
    0x02, 0xD0, 0x07, 0x08, // char '^' (0x005E/94)
    0x02, 0xD7, 0x06, 0x0E, // char '_' (0x005F/95)
    0x02, 0xE3, 0x03, 0x04, // char '`' (0x0060/96)
    0x02, 0xE6, 0x07, 0x0E, // char 'a' (0x0061/97)
    0x02, 0xF4, 0x06, 0x0E, // char 'b' (0x0062/98)
    0x03, 0x00, 0x07, 0x0E, // char 'c' (0x0063/99)
    0x03, 0x0E, 0x07, 0x0E, // char 'd' (0x0064/100)
    0x03, 0x1C, 0x07, 0x0E, // char 'e' (0x0065/101)
    0x03, 0x2A, 0x06, 0x0E, // char 'f' (0x0066/102)
    0x03, 0x36, 0x07, 0x10, // char 'g' (0x0067/103)
    0x03, 0x44, 0x06, 0x0E, // char 'h' (0x0068/104)
    0x03, 0x50, 0x07, 0x0E, // char 'i' (0x0069/105)
    0x03, 0x5E, 0x07, 0x10, // char 'j' (0x006A/106)
    0x03, 0x6C, 0x06, 0x0E, // char 'k' (0x006B/107)
    0x03, 0x78, 0x06, 0x0E, // char 'l' (0x006C/108)
    0x03, 0x84, 0x06, 0x0E, // char 'm' (0x006D/109)
    0x03, 0x90, 0x06, 0x0E, // char 'n' (0x006E/110)
    0x03, 0x9C, 0x07, 0x0E, // char 'o' (0x006F/111)
    0x03, 0xAA, 0x06, 0x10, // char 'p' (0x0070/112)
    0x03, 0xB6, 0x07, 0x10, // char 'q' (0x0071/113)
    0x03, 0xC4, 0x07, 0x0E, // char 'r' (0x0072/114)
    0x03, 0xD2, 0x07, 0x0E, // char 's' (0x0073/115)
    0x03, 0xE0, 0x06, 0x0E, // char 't' (0x0074/116)
    0x03, 0xEC, 0x07, 0x0E, // char 'u' (0x0075/117)
    0x03, 0xFA, 0x07, 0x0E, // char 'v' (0x0076/118)
    0x04, 0x08, 0x06, 0x0E, // char 'w' (0x0077/119)
    0x04, 0x14, 0x06, 0x0E, // char 'x' (0x0078/120)
    0x04, 0x20, 0x07, 0x10, // char 'y' (0x0079/121)
    0x04, 0x2E, 0x07, 0x0E, // char 'z' (0x007A/122)
    0x04, 0x3C,
    // char ' ' (0x0020/32)
    0xFE, 0xFE, 0x33, 0x37, // char '!' (0x0021/33)
    0x0E, 0x00, 0x00, 0x0E, // char '"' (0x0022/34)
    0x80, 0xF0, 0xF0, 0x80, 0xF0, 0xF0, 0x80, 0x0D, 0x3F, 0x3F, 0x0D, 0x3F, 0x3F, 0x0D, // char '#' (0x0023/35)
    0x18, 0x7C, 0xE6, 0xFF, 0x86, 0x0C, 0x08, 0x08, 0x18, 0x30, 0x7F, 0x33, 0x1F, 0x0C, // char '$' (0x0024/36)
    0x00, 0x0E, 0x0E, 0xC4, 0xF8, 0x1E, 0x02, 0x00, 0x38, 0x1F, 0x07, 0x38, 0x38, 0x30, // char '%' (0x0025/37)
    0x10, 0xFC, 0xC6, 0xC6, 0xC6, 0xFC, 0xB8, 0x0F, 0x1F, 0x30, 0x30, 0x30, 0x31, 0x30, // char '&' (0x0026/38)
    0x0E, // char ''' (0x0027/39)
    0xF0, 0xFC, 0x06, 0x06, 0x07, 0x1F, 0x30, 0x30, // char '(' (0x0028/40)
    0x06, 0x06, 0xFC, 0xF8, 0x30, 0x30, 0x1F, 0x0F, // char ')' (0x0029/41)
    0x18, 0x7C, 0x7C, 0xFE, 0x7C, 0x7C, 0x18, // char '*' (0x002A/42)
    0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x03, 0x03, 0x03, 0x0F, 0x03, 0x03, 0x03, // char '+' (0x002B/43)
    0x00, 0x00, 0x00, 0x80, 0xE0, 0x60, // char ',' (0x002C/44)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, // char '-' (0x002D/45)
    0x00, 0x00, 0x00, 0x00, 0x30, 0x30, // char '.' (0x002E/46)
    0x00, 0x00, 0x80, 0xF0, 0x7C, 0x0E, 0x00, 0x20, 0x3C, 0x0F, 0x03, 0x00, 0x00, 0x00, // char '/' (0x002F/47)
    0xF0, 0xFC, 0x06, 0xC6, 0xFE, 0xFC, 0xF8, 0x07, 0x1F, 0x3F, 0x33, 0x30, 0x1F, 0x0F, // char '0' (0x0030/48)
    0x0C, 0x0E, 0xFE, 0x00, 0x00, 0x3F, // char '1' (0x0031/49)
    0x00, 0x0C, 0x06, 0x06, 0xC6, 0x7C, 0x38, 0x30, 0x38, 0x3E, 0x33, 0x31, 0x30, 0x30, // char '2' (0x0032/50)
    0x08, 0x1C, 0x06, 0x06, 0x86, 0xEC, 0x7C, 0x08, 0x18, 0x30, 0x30, 0x30, 0x1B, 0x1F, // char '3' (0x0033/51)
    0x00, 0x00, 0xC0, 0xF0, 0x1C, 0xFE, 0xFE, 0x08, 0x0E, 0x0F, 0x0C, 0x0C, 0x3F, 0x3F, // char '4' (0x0034/52)
    0xFE, 0xFE, 0x66, 0x66, 0x66, 0xC6, 0x86, 0x00, 0x18, 0x30, 0x30, 0x30, 0x1F, 0x0F, // char '5' (0x0035/53)
    0x00, 0xFC, 0xC6, 0xC6, 0xC6, 0x8C, 0x08, 0x00, 0x1F, 0x30, 0x30, 0x30, 0x1F, 0x0F, // char '6' (0x0036/54)
    0x06, 0x06, 0x06, 0xC6, 0xFE, 0x1E, 0x02, 0x00, 0x38, 0x1F, 0x03, 0x00, 0x00, 0x00, // char '7' (0x0037/55)
    0x10, 0xFC, 0xC6, 0xC6, 0xC6, 0xFC, 0x38, 0x06, 0x1F, 0x30, 0x30, 0x30, 0x1F, 0x0F, // char '8' (0x0038/56)
    0x78, 0xFC, 0x86, 0x86, 0x86, 0xFC, 0xF8, 0x08, 0x18, 0x31, 0x31, 0x31, 0x1F, 0x0F, // char '9' (0x0039/57)
    0x00, 0x60, 0x60, 0x00, 0x30, 0x30, // char ':' (0x003A/58)
    0x00, 0x60, 0x60, 0x80, 0xE0, 0x60, // char ';' (0x003B/59)
    0x00, 0x00, 0x80, 0x80, 0x80, 0xC0, 0xC0, 0x03, 0x07, 0x07, 0x07, 0x0D, 0x0C, 0x00, // char '<' (0x003C/60)
    0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, // char '=' (0x003D/61)
    0xC0, 0x80, 0x80, 0x80, 0x00, 0x00, 0x0C, 0x0D, 0x07, 0x07, 0x07, 0x03, // char '>' (0x003E/62)
    0x18, 0x1C, 0x06, 0x86, 0x86, 0xFC, 0x70, 0x00, 0x00, 0x37, 0x01, 0x01, 0x01, 0x00, // char '?' (0x003F/63)
    0xF0, 0xFC, 0x06, 0x06, 0xC6, 0xFC, 0xF8, 0x07, 0x1F, 0x30, 0x30, 0x03, 0x07, 0x07, // char '@' (0x0040/64)
    0x00, 0x80, 0xFC, 0x7E, 0xFC, 0x00, 0x00, 0x20, 0x3F, 0x1F, 0x18, 0x1F, 0x3F, 0x20, // char 'A' (0x0041/65)
    0xFE, 0x86, 0x86, 0x86, 0xFC, 0x38, 0x3F, 0x31, 0x31, 0x31, 0x1F, 0x0E, // char 'B' (0x0042/66)
    0xF0, 0xFC, 0x06, 0x06, 0x06, 0x0C, 0x08, 0x07, 0x1F, 0x30, 0x30, 0x30, 0x18, 0x08, // char 'C' (0x0043/67)
    0xFE, 0x06, 0x06, 0x06, 0xFE, 0xF8, 0x3F, 0x30, 0x30, 0x30, 0x1F, 0x0F, // char 'D' (0x0044/68)
    0xFE, 0x86, 0x86, 0x86, 0x86, 0x06, 0x3F, 0x31, 0x31, 0x31, 0x31, 0x30, // char 'E' (0x0045/69)
    0xFE, 0x86, 0x86, 0x86, 0x86, 0x06, 0x3F, 0x01, 0x01, 0x01, 0x01, 0x00, // char 'F' (0x0046/70)
    0xF0, 0xFC, 0x06, 0x06, 0x06, 0x0C, 0x08, 0x07, 0x1F, 0x30, 0x30, 0x36, 0x1E, 0x0E, // char 'G' (0x0047/71)
    0xFE, 0x80, 0x80, 0x80, 0xFE, 0xFE, 0x3F, 0x01, 0x01, 0x01, 0x3F, 0x3F, // char 'H' (0x0048/72)
    0x06, 0x06, 0x06, 0xFE, 0x06, 0x06, 0x06, 0x30, 0x30, 0x30, 0x3F, 0x30, 0x30, 0x30, // char 'I' (0x0049/73)
    0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFE, 0x18, 0x38, 0x30, 0x30, 0x30, 0x1F, 0x0F, // char 'J' (0x004A/74)
    0xFE, 0xC0, 0x70, 0x1C, 0x0E, 0x02, 0x3F, 0x01, 0x07, 0x1C, 0x38, 0x20, // char 'K' (0x004B/75)
    0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x30, 0x30, 0x30, 0x30, 0x30, // char 'L' (0x004C/76)
    0xFE, 0x0E, 0x38, 0x1C, 0xFE, 0xFE, 0x3F, 0x00, 0x00, 0x00, 0x3F, 0x3F, // char 'M' (0x004D/77)
    0xFE, 0x7C, 0xE0, 0x80, 0xFE, 0xFE, 0x3F, 0x00, 0x01, 0x0F, 0x3F, 0x3F, // char 'N' (0x004E/78)
    0xF0, 0xFC, 0x06, 0x06, 0x06, 0xFC, 0xF8, 0x07, 0x1F, 0x30, 0x30, 0x30, 0x1F, 0x0F, // char 'O' (0x004F/79)
    0xFE, 0x86, 0x86, 0x86, 0xFC, 0x78, 0x3F, 0x01, 0x01, 0x01, 0x00, 0x00, // char 'P' (0x0050/80)
    0xF8, 0xFC, 0x06, 0x06, 0x06, 0xFC, 0xF8, 0x0F, 0x1F, 0x30, 0x38, 0xF8, 0xDF, 0x0F, // char 'Q' (0x0051/81)
    0xFE, 0x86, 0x86, 0x86, 0xFC, 0x38, 0x3F, 0x01, 0x03, 0x0F, 0x3C, 0x20, // char 'R' (0x0052/82)
    0x18, 0x7C, 0x46, 0xC6, 0x86, 0x0C, 0x08, 0x08, 0x18, 0x30, 0x30, 0x31, 0x1F, 0x0E, // char 'S' (0x0053/83)
    0x06, 0x06, 0x06, 0xFE, 0x06, 0x06, 0x06, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, // char 'T' (0x0054/84)
    0xFE, 0x00, 0x00, 0x00, 0xFE, 0xFE, 0x1F, 0x30, 0x30, 0x30, 0x1F, 0x0F, // char 'U' (0x0055/85)
    0x02, 0xFE, 0xF0, 0x00, 0xF0, 0x7E, 0x02, 0x00, 0x00, 0x1F, 0x3E, 0x1F, 0x00, 0x00, // char 'V' (0x0056/86)
    0x02, 0xFE, 0x00, 0x00, 0x00, 0xFE, 0xFE, 0x00, 0x3F, 0x3E, 0x0E, 0x38, 0x3F, 0x03, // char 'W' (0x0057/87)
    0x00, 0x0E, 0x7C, 0xF0, 0xF8, 0x1E, 0x02, 0x00, 0x38, 0x1F, 0x07, 0x0F, 0x3C, 0x20, // char 'X' (0x0058/88)
    0x02, 0x1E, 0x7C, 0xE0, 0x7C, 0x0E, 0x02, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, // char 'Y' (0x0059/89)
    0x06, 0x06, 0x06, 0xC6, 0x7E, 0x1E, 0x02, 0x00, 0x38, 0x3F, 0x33, 0x30, 0x30, 0x30, // char 'Z' (0x005A/90)
    0xFE, 0x06, 0x06, 0x06, 0x3F, 0x30, 0x30, 0x30, // char '[' (0x005B/91)
    0x02, 0x1E, 0xF8, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x1F, 0x38, 0x00, // char '\' (0x005C/92)
    0x06, 0x06, 0x06, 0xFE, 0x30, 0x30, 0x30, 0x3F, // char ']' (0x005D/93)
    0x80, 0xF0, 0x7C, 0x0E, 0x7E, 0xF0, 0x80, // char '^' (0x005E/94)
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, // char '_' (0x005F/95)
    0x02, 0x0E, 0x0C, // char '`' (0x0060/96)
    0x80, 0xC0, 0x60, 0x60, 0x60, 0xE0, 0xE0, 0x07, 0x1F, 0x30, 0x30, 0x30, 0x3F, 0x3F, // char 'a' (0x0061/97)
    0xFE, 0x60, 0x60, 0x60, 0xE0, 0xC0, 0x3F, 0x30, 0x30, 0x30, 0x3F, 0x1F, // char 'b' (0x0062/98)
    0x80, 0xC0, 0x60, 0x60, 0x60, 0xC0, 0x80, 0x0F, 0x1F, 0x30, 0x30, 0x30, 0x18, 0x08, // char 'c' (0x0063/99)
    0x80, 0xC0, 0x60, 0x60, 0x60, 0xFE, 0xFE, 0x0F, 0x1F, 0x30, 0x30, 0x30, 0x3F, 0x3F, // char 'd' (0x0064/100)
    0x80, 0xC0, 0x60, 0x60, 0x60, 0xC0, 0x80, 0x0F, 0x1F, 0x33, 0x33, 0x33, 0x1B, 0x0B, // char 'e' (0x0065/101)
    0xFC, 0x86, 0x86, 0x86, 0x0E, 0x0C, 0x3F, 0x01, 0x01, 0x01, 0x00, 0x00, // char 'f' (0x0066/102)
    0x80, 0xC0, 0x60, 0x60, 0x60, 0xE0, 0xE0, 0x4F, 0xDF, 0xB0, 0xB0, 0xB0, 0xFF, 0x7F, // char 'g' (0x0067/103)
    0xFE, 0x60, 0x60, 0x60, 0xC0, 0xC0, 0x3F, 0x00, 0x00, 0x00, 0x3F, 0x3F, // char 'h' (0x0068/104)
    0x20, 0x20, 0x62, 0xC6, 0x02, 0x00, 0x00, 0x30, 0x30, 0x30, 0x3F, 0x30, 0x30, 0x30, // char 'i' (0x0069/105)
    0x00, 0x00, 0x60, 0x60, 0x60, 0xE6, 0x06, 0xC0, 0xC0, 0x80, 0x80, 0x80, 0xFF, 0x00, // char 'j' (0x006A/106)
    0xFE, 0xC0, 0x00, 0xC0, 0xE0, 0x20, 0x3F, 0x01, 0x07, 0x1F, 0x38, 0x20, // char 'k' (0x006B/107)
    0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x30, 0x30, 0x30, 0x38, 0x18, // char 'l' (0x006C/108)
    0xE0, 0x60, 0xE0, 0xE0, 0xE0, 0xC0, 0x3F, 0x00, 0x3F, 0x3F, 0x3F, 0x3F, // char 'm' (0x006D/109)
    0xE0, 0xE0, 0x60, 0x60, 0xC0, 0xC0, 0x3F, 0x00, 0x00, 0x00, 0x3F, 0x3F, // char 'n' (0x006E/110)
    0x80, 0xC0, 0x60, 0x60, 0x60, 0xC0, 0x80, 0x0F, 0x1F, 0x30, 0x30, 0x30, 0x1F, 0x0F, // char 'o' (0x006F/111)
    0xE0, 0x60, 0x60, 0x60, 0xC0, 0x80, 0xFF, 0x30, 0x30, 0x30, 0x1F, 0x0F, // char 'p' (0x0070/112)
    0x80, 0xC0, 0x60, 0x60, 0x60, 0xE0, 0xE0, 0x0F, 0x1F, 0x30, 0x30, 0x30, 0xFF, 0xFF, // char 'q' (0x0071/113)
    0x00, 0xC0, 0x60, 0x60, 0x60, 0xE0, 0xE0, 0x3F, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, // char 'r' (0x0072/114)
    0x80, 0xC0, 0x60, 0x60, 0x60, 0xC0, 0x80, 0x09, 0x19, 0x32, 0x32, 0x36, 0x1C, 0x0C, // char 's' (0x0073/115)
    0xFE, 0x60, 0x60, 0x60, 0x00, 0x00, 0x1F, 0x30, 0x30, 0x30, 0x38, 0x18, // char 't' (0x0074/116)
    0xE0, 0xE0, 0x00, 0x00, 0x00, 0xE0, 0xE0, 0x07, 0x1F, 0x30, 0x30, 0x30, 0x3F, 0x3F, // char 'u' (0x0075/117)
    0x20, 0xE0, 0x80, 0x00, 0x80, 0xE0, 0x20, 0x00, 0x03, 0x1F, 0x3C, 0x1F, 0x01, 0x00, // char 'v' (0x0076/118)
    0xE0, 0x00, 0xE0, 0xE0, 0xE0, 0xE0, 0x3F, 0x30, 0x3F, 0x3F, 0x3F, 0x3F, // char 'w' (0x0077/119)
    0x60, 0xC0, 0x80, 0xC0, 0xE0, 0x60, 0x30, 0x18, 0x0F, 0x1F, 0x38, 0x30, // char 'x' (0x0078/120)
    0xE0, 0xE0, 0x00, 0x00, 0x00, 0xE0, 0xE0, 0x07, 0xDF, 0xB0, 0xB0, 0xB0, 0xFF, 0x7F, // char 'y' (0x0079/121)
    0x00, 0x60, 0x60, 0x60, 0xE0, 0x60, 0x20, 0x00, 0x30, 0x3C, 0x37, 0x31, 0x30, 0x30, // char 'z' (0x007A/122)
    0x00, 0x00, 0x00, // end of unicode tables
    // FONT REQUIRES 1460 BYTES
};
